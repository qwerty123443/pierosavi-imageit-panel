{"version":3,"sources":["../src/imageit_ctrl.js"],"names":["isEqualTo","a","b","undefined","isGreaterThan","isLessThan","getMappingOperators","mappingOperators","getRandomId","Math","random","toString","substr","ValueColorMapping","id","name","operatorName","compareTo","isSensorFontBold","fontColor","bgColor","nameBlink","valueBlink","bgBlink","Sensor","metric","xlocation","ylocation","size","visible","renderValue","valueFormatted","valueUnit","displayName","link_url","resolvedLink","rectangular","valueMappingIds","isBold","unitFormat","decimals","sizeCoefficient","normalizeColor","color","toLowerCase","_","MetricsPanelCtrl","kbn","copyProps","panelDefaults","colorMappings","colorMappingMap","valueMappings","metricValues","seriesList","series","bgimage","realbgimage","sensors","templateSrv","sizecoefficient","islocked","islockvisible","operator","fn","ImageItCtrl","$scope","$injector","$sce","defaults","panel","events","on","onInitEditMode","bind","render","onDataReceived","dataList","dataListLength","length","push","target","value","datapoints","index","splice","tmp1","forEach","prop","ii","tmp2","sensor","addEditorTab","unitFormats","getUnitFormats","scope","elem","attrs","ctrl","panelContainer","find","image","querySelector","draggableElement","imageWidth","offsetWidth","imageHeight","offsetHeight","metricMap","keyBy","valueMappingsMap","mapping","mappingOperatorsMap","noImgb64","b64CameraImg","img","replace","borderRadius","xlocationStr","ylocationStr","effectiveName","metricValue","valueMapping","mappingOperatorName","mappingId","mappingOperator","realFontColor","realBgColor","normalizeSensor","formatFunc","valueFormats","dragEventSetup","window","interact","isSet","unset","draggable","inertia","restrict","restriction","endOnly","elementRect","top","left","bottom","right","autoScroll","onmove","event","datax","parseFloat","getAttribute","dx","datay","dy","elementTransform","style","webkitTransform","transform","setAttribute","onend","xpercentage","ypercentage","renderingCompleted","originalValue","split","map","startsWith","endsWith","icon","indexOf","repeatCount","repeat","slice","imgUrl","imgWidth","imgHeight","join","trustAsHtml","subItem","templateUrl"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable func-names */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable import/prefer-default-export */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport _ from 'lodash';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport './libs/interact';\nimport kbn from 'app/core/utils/kbn';\n\nconst copyProps = [\n    'size',\n    'bgColor',\n    'fontColor',\n    'visible',\n    'renderValue',\n    'valueUnit',\n    'displayName',\n    'link_url',\n    'link_hover',\n    'resolvedLink',\n    'rectangular',\n    'valueMappingIds',\n    'isBold',\n    'unitFormat',\n    'decimals',\n    'sizeCoefficient'\n];\n\nconst panelDefaults = {\n    colorMappings: [],\n    colorMappingMap: [],\n    valueMappings: [],\n    metricValues: [],\n    seriesList: [],\n    series: [],\n    bgimage: '',\n    realbgimage: '',\n    sensors: [],\n    templateSrv: null,\n    sizecoefficient: 20,\n    islocked: false,\n    islockvisible: true\n};\n\nconst mappingOperators = [{\n    name: 'equal',\n    operator: '=',\n    fn: isEqualTo\n}, {\n    name: 'greaterThan',\n    operator: '>',\n    fn: isGreaterThan\n}, {\n    name: 'lessThan',\n    operator: '<',\n    fn: isLessThan\n}];\n\nexport class ImageItCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $sce, templateSrv) {\n        super($scope, $injector);\n        _.defaults(this.panel, panelDefaults);\n        this.templateSrv = templateSrv;\n        this.$sce = $sce;\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-initialized', this.render.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    }\n\n    onDataReceived(dataList) {\n        const dataListLength = dataList.length;\n        this.panel.metricValues = [];\n        for (let series = 0; series < dataListLength; series += 1) {\n            this.panel.metricValues.push({\n                name: dataList[series].target,\n                value: dataList[series].datapoints[dataList[series].datapoints.length - 1][0]\n            });\n        }\n\n        this.render();\n    }\n\n    deleteSensor(index) {\n        this.panel.sensors.splice(index, 1);\n    }\n\n    copySensor(index) {\n        let tmp1 = new Sensor();\n\n        copyProps.forEach((prop) => {\n            tmp1[prop] = this.panel.sensors[index][prop];\n        });\n        let ii = index + 1;\n\n        while (ii < this.panel.sensors.length) {\n            const tmp2 = this.panel.sensors[ii];\n            this.panel.sensors[ii] = tmp1;\n            tmp1 = tmp2;\n            ii += 1;\n        }\n\n        this.panel.sensors.push(tmp1);\n    }\n\n    addSensor() {\n        this.panel.sensors.push(\n            new Sensor()\n        );\n        this.render();\n    }\n\n    moveSensorUp(index) {\n        const sensor = this.panel.sensors[index];\n        this.panel.sensors.splice(index, 1);\n        this.panel.sensors.splice(index - 1, 0, sensor);\n    }\n\n    moveSensorDown(index) {\n        const sensor = this.panel.sensors[index];\n        this.panel.sensors.splice(index, 1);\n        this.panel.sensors.splice(index + 1, 0, sensor);\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Sensor', 'public/plugins/pierosavi-imageit-panel/editor.html', 2);\n        this.addEditorTab('Value Mapping', 'public/plugins/pierosavi-imageit-panel/mappings.html', 3);\n        this.unitFormats = kbn.getUnitFormats();\n        this.render();\n    }\n\n    toggleBlock() {\n        this.panel.islocked = !this.panel.islocked;\n        this.render();\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        const panelContainer = (elem.find('.pierosavi-imageit-panel')[0]);\n        const image = (panelContainer.querySelector('#imageit-image'));\n        const draggableElement = '#imageit_panel' + ctrl.panel.id + '_sensor';\n\n        function render() {\n            if (!ctrl.panel.sensors || (ctrl.panel.bgimage === '')) {\n                return;\n            }\n\n            const imageWidth = image.offsetWidth;\n            const imageHeight = image.offsetHeight;\n\n            const metricMap = _.keyBy(ctrl.panel.metricValues, value => value.name);\n            const valueMappingsMap = _.keyBy(ctrl.panel.valueMappings, mapping => mapping.id);\n            const mappingOperatorsMap = _.keyBy(mappingOperators, operator => operator.name);\n\n            if (ctrl.panel.bgimage == \"query\") {\n                const noImgb64 = \"\"\n                const b64CameraImg = (\"camera.img\" in metricMap ? metricMap[\"camera.img\"].value : \"\");\n\n                const img = (b64CameraImg != \"\" && b64CameraImg != \" \") ? b64CameraImg : noImgb64;\n                ctrl.panel.realbgimage = \"data:image/png;base64, \" + img;\n            } else {\n                ctrl.panel.realbgimage = ctrl.templateSrv.replace(ctrl.panel.image);\n            }\n\n            for (const sensor of ctrl.panel.sensors) {\n                _.defaults(sensor, new Sensor());\n\n                const sizeCoefficient = sensor.sizeCoefficient ? sensor.sizeCoefficient : ctrl.panel.sizecoefficient;\n\n                sensor.size = imageWidth * sizeCoefficient / 1600;\n\n                sensor.borderRadius = sensor.rectangular ? '5%' : '50%';\n\n                sensor.xlocationStr = (sensor.xlocation * imageWidth / 100) + 'px';\n                sensor.ylocationStr = (sensor.ylocation * imageHeight / 100) + 'px';\n\n                if (sensor.link_url !== undefined) {\n                    sensor.resolvedLink = ctrl.templateSrv.replace(sensor.link_url);\n                }\n\n                // We need to replace possible variables in the sensors name\n                const effectiveName = ctrl.templateSrv.replace(sensor.metric);\n\n                const metric = metricMap[effectiveName];\n\n                const metricValue = (metric !== undefined) ? metric.value : undefined;\n\n                // update existing valueMappings\n                for (const valueMapping of ctrl.panel.valueMappings) {\n                    if (valueMapping.mappingOperatorName == null) {\n                        valueMapping.mappingOperatorName = mappingOperators[0].name;\n                    }\n\n                    if (valueMapping.id == null) {\n                        valueMapping.id = getRandomId();\n                    }\n                }\n\n                if (sensor.valueMappingIds === undefined) {\n                    sensor.valueMappingIds = [];\n                }\n\n                if (sensor.valueMappingIds.length > 0) {\n                    for (const mappingId of sensor.valueMappingIds) {\n                        const valueMapping = valueMappingsMap[mappingId];\n\n                        if (valueMapping === undefined) {\n                            break;\n                        }\n\n                        const mappingOperator = mappingOperatorsMap[valueMapping.mappingOperatorName];\n\n                        if (mappingOperator.fn(metricValue, valueMapping.compareTo)) {\n                            sensor.realFontColor = valueMapping.fontColor;\n                            sensor.realBgColor = valueMapping.bgColor;\n\n                            sensor.nameBlink = valueMapping.nameBlink;\n                            sensor.valueBlink = valueMapping.valueBlink;\n                            sensor.bgBlink = valueMapping.bgBlink;\n\n                            sensor.isBold = valueMapping.isSensorFontBold;\n\n                            break;\n                        } else {\n                            normalizeSensor(sensor);\n                        }\n                    }\n                } else {\n                    normalizeSensor(sensor);\n                }\n\n                if (metricValue === undefined) {\n                    sensor.valueFormatted = 'Select a sensor metric';\n                } else {\n                    const formatFunc = kbn.valueFormats[sensor.unitFormat];\n                    sensor.valueFormatted = formatFunc(metricValue, sensor.decimals);\n                }\n            }\n\n            dragEventSetup();\n        }\n\n        function normalizeSensor(sensor) {\n            // new sensor property so it doesn't lose the original one\n            // https://github.com/pierosavi/pierosavi-imageit-panel/issues/4\n            sensor.realBgColor = sensor.bgColor;\n            sensor.realFontColor = sensor.fontColor;\n\n            sensor.nameBlink = false;\n            sensor.valueBlink = false;\n            sensor.bgBlink = false;\n\n            sensor.isBold = false;\n        }\n\n        function dragEventSetup() {\n            if (ctrl.panel.islocked) {\n                if (window.interact.isSet(draggableElement)) {\n                    window.interact(draggableElement).unset();\n                }\n            } else if (!window.interact.isSet(draggableElement)) {\n                window.interact(draggableElement).draggable({\n                    // I dont like it personally but this could be configurable in the future\n                    inertia: false,\n                    restrict: {\n                        restriction: '#draggableparent',\n                        endOnly: true,\n                        elementRect: {\n                            top: 0,\n                            left: 0,\n                            bottom: 1,\n                            right: 1\n                        }\n                    },\n                    autoScroll: true,\n                    onmove: function (event) {\n                        const { target } = event;\n                        // keep the dragged position in the data-x/data-y attributes\n                        const datax = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n                        const datay = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\n                        // translate the element\n                        const elementTransform = 'translate(' + datax + 'px, ' + datay + 'px)';\n                        target.style.webkitTransform = elementTransform;\n                        target.style.transform = elementTransform;\n\n                        // update the position attributes\n                        target.setAttribute('data-x', datax);\n                        target.setAttribute('data-y', datay);\n                    },\n                    onend: function (event) {\n                        const { target } = event;\n\n                        const imageHeight = image.offsetHeight;\n                        const imageWidth = image.offsetWidth;\n\n                        // find sensor with the id from the refId attribute on html\n                        const sensor = _.find(ctrl.panel.sensors, {\n                            'id': (event.target).getAttribute('refId')\n                        });\n\n                        // get relative distance in px\n                        const datax = target.getAttribute('data-x');\n                        const datay = target.getAttribute('data-y');\n\n                        // get percentage of relative distance from starting point\n                        const xpercentage = (datax * 100) / imageWidth;\n                        const ypercentage = (datay * 100) / imageHeight;\n\n                        sensor.xlocation += xpercentage;\n                        sensor.ylocation += ypercentage;\n\n                        // reset the starting sensor points\n                        target.setAttribute('data-x', 0);\n                        target.setAttribute('data-y', 0);\n\n                        // target.style.webkitTransform = '';\n                        target.style.transform = '';\n\n                        target.style.left = (sensor.xlocation * imageWidth / 100) + 'px';\n                        target.style.top = (sensor.ylocation * imageHeight / 100) + 'px';\n                    }\n                });\n            }\n        }\n\n        this.events.on('render', function () {\n            render();\n            ctrl.renderingCompleted();\n        });\n    }\n\n    //------------------\n    // Mapping stuff\n    //------------------\n\n    addValueMappingMap() {\n        this.panel.valueMappings.push(new ValueColorMapping());\n    }\n\n    removeValueMappingMap(index) {\n        this.panel.valueMappings.splice(index, 1);\n        this.render();\n    }\n\n    replaceTokens(originalValue) {\n        let value = originalValue;\n\n        if (!value) {\n            return value;\n        }\n        value += '';\n        value = value.split(' ').map((a) => {\n            if (a.startsWith('_fa-') && a.endsWith('_')) {\n                const icon = a.replace(/_/g, '').split(',')[0];\n                const color = a.indexOf(',') > -1 ? ` style=\"color:${normalizeColor(a.replace(/_/g, '').split(',')[1])}\" ` : '';\n                const repeatCount = a.split(',').length > 2 ? +(a.replace(/_/g, '').split(',')[2]) : 1;\n                a = `<i class=\"fa ${icon}\" ${color}></i> `.repeat(repeatCount);\n            } else if (a.startsWith('_img-') && a.endsWith('_')) {\n                a = a.slice(0, -1);\n                const imgUrl = a.replace('_img-', '').split(',')[0];\n                const imgWidth = a.split(',').length > 1 ? a.replace('_img-', '').split(',')[1] : '20px';\n                const imgHeight = a.split(',').length > 2 ? a.replace('_img-', '').split(',')[2] : '20px';\n                const repeatCount = a.split(',').length > 3 ? +(a.replace('_img-', '').split(',')[3]) : 1;\n                a = `<img width=\"${imgWidth}\" height=\"${imgHeight}\" src=\"${imgUrl}\"/>`.repeat(repeatCount);\n            }\n            return a;\n        }).join(' ');\n\n        return this.$sce.trustAsHtml(value);\n    }\n\n    getMappingOperators() {\n        return getMappingOperators();\n    }\n\n    setUnitFormat(sensor, subItem) {\n        sensor.unitFormat = subItem.value;\n        this.render();\n    }\n\n    setBackgroundImage() {\n        this.render();\n    }\n}\n\nfunction isEqualTo(a, b) {\n    // Could be ok if Im comparing strings and numbers\n    // eslint-disable-next-line eqeqeq\n    return (a !== undefined && b !== undefined) ? a == b : false;\n}\n\nfunction isGreaterThan(a, b) {\n    return (a !== undefined && b !== undefined) ? a > b : false;\n}\n\nfunction isLessThan(a, b) {\n    return (a !== undefined && b !== undefined) ? a < b : false;\n}\n\nfunction getMappingOperators() {\n    return mappingOperators;\n}\n\nfunction getRandomId() {\n    return '_' + Math.random().toString(36).substr(2, 9);\n}\n\nfunction ValueColorMapping() {\n    // TODO: check if it doesnt exist yet\n    this.id = getRandomId();\n    this.name = undefined;\n    this.operatorName = mappingOperators[0].name;\n    this.compareTo = undefined;\n    this.isSensorFontBold = false;\n    this.fontColor = '#000';\n    this.bgColor = '#fff';\n    this.nameBlink = false;\n    this.valueBlink = false;\n    this.bgBlink = false;\n}\n\nfunction Sensor() {\n    this.metric = '';\n    this.xlocation = 50;\n    this.ylocation = 25;\n    this.bgColor = 'rgba(64,64,64,1.000)';\n    this.fontColor = 'rgba(255,255,255,1.000)';\n    this.size = 14;\n    this.visible = true;\n    this.renderValue = true;\n    this.valueFormatted = '';\n    this.valueUnit = '';\n    this.displayName = '';\n    this.link_url = '';\n    this.resolvedLink = '';\n    this.rectangular = true;\n    this.valueMappingIds = [];\n    this.isBold = false;\n    this.id = getRandomId();\n    this.unitFormat = 'none';\n    this.decimals = 2;\n    this.sizeCoefficient = undefined;\n}\n\nfunction normalizeColor(color) {\n    if (color.toLowerCase() === 'green') {\n        return 'rgba(50, 172, 45, 0.97)';\n    }\n    if (color.toLowerCase() === 'orange') {\n        return 'rgba(237, 129, 40, 0.89)';\n    }\n    if (color.toLowerCase() === 'red') {\n        return 'rgba(245, 54, 54, 0.9)';\n    }\n    return color.toLowerCase();\n}\n\nImageItCtrl.templateUrl = 'module.html';\n"],"file":"imageit_ctrl.js"}